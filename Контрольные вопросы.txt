Подключение сценария JavaScript к веб-странице:

Внутри HTML-документа можно использовать теги <script>:
html
Копировать код
<script src="script.js"></script> <!-- Подключение внешнего файла -->
<script> /* JavaScript код прямо внутри тега */ </script>
Можно подключить внешний файл или вставить JavaScript-код прямо в HTML-файл.
Типы данных в JavaScript:

number (число): целые и дробные числа
string (строка): текстовые данные, заключенные в кавычки
boolean (логический тип): true или false
null: намеренное отсутствие значения
undefined: переменная объявлена, но не имеет значения
object: сложные структуры данных (массивы, объекты, функции)
symbol: уникальные и неизменные идентификаторы (ES6)
bigint: целые числа произвольной длины (ES11)
Изменение значения контейнера HTML с помощью JavaScript: Для изменения содержимого элемента можно использовать свойство innerHTML или textContent:

javascript
Копировать код
document.getElementById('myDiv').innerHTML = 'Новое содержимое';
document.getElementById('myDiv').textContent = 'Текст без HTML-разметки';
Ключевые слова для объявления переменных в JavaScript:

var: устаревшее ключевое слово, поддерживает функциональную область видимости
let: объявляет переменную с блочной областью видимости
const: объявляет неизменную переменную с блочной областью видимости
Примеры использования метода Math:

Math.random(): возвращает случайное число от 0 до 1
Math.floor(4.7): округляет число вниз (результат 4)
Math.ceil(4.1): округляет число вверх (результат 5)
Math.round(4.5): округляет до ближайшего целого (результат 5)
Math.max(1, 2, 3): возвращает максимальное значение (результат 3)
Различие между null и undefined:

null: намеренное присвоение значения "ничего". Переменная имеет значение, но это значение пустое.
undefined: значение отсутствует, переменная объявлена, но ей не присвоено никакое значение.
Виды циклов в JavaScript:

for: используется для известного количества итераций.
javascript
Копировать код
for (let i = 0; i < 5; i++) { ... }
while: выполняет блок кода, пока условие истинно.
javascript
Копировать код
while (условие) { ... }
do...while: сначала выполняет код, а затем проверяет условие.
javascript
Копировать код
do { ... } while (условие);
for...in: перебирает все перечисляемые свойства объекта.
for...of: перебирает значения элементов коллекции (массивы, строки и т. д.).
Назначение методов parseFloat и parseInt:

parseFloat(string): преобразует строку в число с плавающей запятой.
javascript
Копировать код
parseFloat("3.14"); // 3.14
parseInt(string, radix): преобразует строку в целое число, второй аргумент указывает систему счисления.
javascript
Копировать код
parseInt("100", 2); // 4 (в двоичной системе)
Примеры событий и обработчиков событий в JavaScript:

События:
click: клик мыши
mouseover: наведение мыши на элемент
keydown: нажатие клавиши
submit: отправка формы
Обработчики событий:
Использование атрибутов в HTML:
html
Копировать код
<button onclick="myFunction()">Кликни</button>
Использование метода addEventListener:
javascript
Копировать код
document.getElementById('myButton').addEventListener('click', myFunction);
Назначение функций в JavaScript: Функции в JavaScript нужны для многократного выполнения блоков кода. Они позволяют структурировать код, улучшить его повторное использование и упростить поддержку. Функции могут принимать аргументы, возвращать значения и вызываться по необходимости:

javascript
Копировать код
function sum(a, b) {
    return a + b;
}
console.log(sum(3, 4)); // 7